package by.belstu;import org.apache.log4j.Logger;import org.apache.log4j.LogManager;import org.apache.log4j.xml.DOMConfigurator;import javax.xml.bind.annotation.XmlRootElement;import javax.xml.bind.annotation.XmlType;import java.util.ArrayList;import java.util.Comparator;public class ItCompany implements IShow {    static{        new DOMConfigurator().doConfigure("log/log4j.xml",LogManager.getLoggerRepository());    }    private static ArrayList<ItCompany> companies = new ArrayList<>();    private static final Logger logger = Logger.getLogger(ItCompany.class);    private static int nextId = 1;    private int id;    private String nameCompany;    private ArrayList<Employee> employees = new ArrayList<>();    public Director director = new Director();    public ItCompany(String nameCompany, String directorFirstName, String directorSecondName) {        this.nameCompany = nameCompany;        director.firstName = directorFirstName;        director.secondName = directorSecondName;        id = nextId;        logger.info("Добавлена новая компания "+this.nameCompany);        nextId++;    }    public class Director implements IShow{        private String firstName;        private String secondName;        public String getFirstName() {            return firstName;        }        public String getSecondName() {            return secondName;        }        public void sortBySalary(){            Comparator<Employee> cmp = Comparator.comparing(Employee::getSalary);            employees.sort(cmp);        }        public int getCountEmployees(){            return employees.size();        }        public String show() {            return  "Director: " + firstName + " " + secondName;        }    }    public int getId(){        return id;    }    public String getNameCompany() {        return nameCompany;    }    public static ArrayList<ItCompany> getCompanies() {        return companies;    }    public void addEmployee(Employee employee){        employees.add(employee);        System.out.println("Сотрудник добавлен!");        logger.info("("+this.nameCompany +") Добавлен сотрудник - " + employee.getFirstName() + " " + employee.getSecondName());    }    public void showAllEmployees(){        System.out.println("\nСписок всех сотрудников: ");        for (Employee e: employees) {            System.out.println(e.show());        }    }    public String show() {        return "\nCompany: " + nameCompany +                "\n" + director.show();    }}