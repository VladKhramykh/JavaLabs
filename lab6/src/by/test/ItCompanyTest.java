package by.test;import by.belstu.Employees.Employees;import by.belstu.ItCompany;import org.apache.log4j.LogManager;import org.apache.log4j.Logger;import org.apache.log4j.xml.DOMConfigurator;import org.junit.AfterClass;import org.junit.BeforeClass;import org.junit.Test;import org.junit.runner.RunWith;import org.junit.runners.Parameterized;import java.util.ArrayList;import java.util.Arrays;import java.util.List;import static org.junit.Assert.assertEquals;import static org.junit.Assert.assertNotNull;@RunWith(Parameterized.class)public class ItCompanyTest {    @Parameterized.Parameters(name="{index}")    public static Iterable<Object[]> data() {        return Arrays.asList(new Object[][]{                {"epam", "valera","valera"},                {"ItVitalya", "Vitalya", "virkovski"},                {"CXC","Valera", "Jmishenko"}        });    }    static{        new DOMConfigurator().doConfigure("log/log4j.xml", LogManager.getLoggerRepository());    }    private static final Logger logger = Logger.getLogger(ItCompany.class);    private static ArrayList<ItCompany> companies = new ArrayList<>();    private static int nextId = 1;    private int id;    private String nameCompany;    private String directorFirstName;    private String directorSecondName;    private List<Employees> employees = new ArrayList<>();    public ItCompanyTest(String nameCompany, String directorFirstName, String directorSecondName) {        this.nameCompany = nameCompany;        this.directorFirstName = directorFirstName;        this.directorSecondName = directorSecondName;        id = nextId;        logger.info("Добавлена новая компания "+this.nameCompany);        nextId++;    }    @BeforeClass    public static void createObject(){        System.out.println("ItCompany created");    }    @AfterClass    public static void deleteItCompany(){        System.out.println("ItCompany deleted");    }    @Test    public void getDirectorFirstName() {        assertEquals(directorFirstName,new ItCompany(nameCompany,directorFirstName,directorSecondName).getDirectorFirstName());    }    @Test    public void getDirectorSecondName() {        assertEquals(directorSecondName,new ItCompany(nameCompany,directorFirstName,directorSecondName).getDirectorSecondName());    }    @Test    public void getId() {        assertNotNull(id);    }}