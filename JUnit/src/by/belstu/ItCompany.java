package by.belstu;import by.belstu.Employees.Employees;import org.apache.log4j.LogManager;import org.apache.log4j.Logger;import org.apache.log4j.xml.DOMConfigurator;import javax.xml.bind.annotation.XmlElement;import javax.xml.bind.annotation.XmlRootElement;import javax.xml.bind.annotation.XmlType;import java.io.Serializable;import java.util.ArrayList;import java.util.List;@XmlType(propOrder = {"nameCompany","directorFirstName","directorSecondName","employees"}, name="company")@XmlRootElementpublic class ItCompany implements Serializable{    static{        new DOMConfigurator().doConfigure("log/log4j.xml",LogManager.getLoggerRepository());    }    private static final Logger logger = Logger.getLogger(ItCompany.class);    private static ArrayList<ItCompany> companies = new ArrayList<>();    private static int nextId = 1;    private int id;    @XmlElement    private String nameCompany;    @XmlElement    private String directorFirstName;    @XmlElement    private String directorSecondName;    @XmlElement    private List<Employees> employees = new ArrayList<>();    public ItCompany(String nameCompany, String directorFirstName, String directorSecondName) {        this.nameCompany = nameCompany;        this.directorFirstName = directorFirstName;        this.directorSecondName = directorSecondName;        id = nextId;        logger.info("Добавлена новая компания "+this.nameCompany);        nextId++;    }    public ItCompany(){}    public List<Employees> getEmployees() {        return employees;    }    public String getDirectorFirstName() {        return directorFirstName;    }    public String getDirectorSecondName() {        return directorSecondName;    }    public int getId(){        return id;    }    public String getNameCompany() {        return nameCompany;    }    public static List<ItCompany> getCompanies() {        return companies;    }    public void addEmployee(Employees employee){        employees.add(employee);        System.out.println("Сотрудник добавлен!");        //logger.info("("+this.nameCompany +") Добавлен сотрудник - " + employee.getFirstName() + " " + employee.getSecondName());    }    public void showDirector(){        System.out.println("\n\tКомпания: "+nameCompany+"\n"+"Директор - " + directorFirstName + " " + directorSecondName);    }    public void showAllEmployees(){        System.out.println("\nСписок всех сотрудников: ");        for (Employees e: employees) {            System.out.println(e.show());        }        //employees.forEach(System.out::println);    }}