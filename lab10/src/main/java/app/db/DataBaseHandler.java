package app.db;import app.Entities.User;import java.sql.*;import java.util.ArrayList;public class DataBaseHandler extends DbConfig{    private Connection connection;    public Connection getConnection() throws SQLException {        String connectionString = "jdbc:mysql://"+dbHost+":"+dbPort+"/"+dbName+"?autoReconnect=true&useSSL=false";        //String connectionString = "jdbc:mysql://localhost:3306/users?autoReconnect=true&useSSL=false";        try{            Class.forName("com.mysql.jdbc.Driver");            connection = DriverManager.getConnection(connectionString,"root","");        } catch (ClassNotFoundException e) {            System.out.println("Class not found");        }        return connection;    }    public ArrayList<User> getAllUsers() throws SQLException {        String select = "select * from "+Const.USER_TABLE;        Statement statement = getConnection().createStatement();        ResultSet resultSet = statement.executeQuery(select);        ArrayList<User> users = new ArrayList<User>();        while (resultSet.next()){            int id = resultSet.getInt(0);            String firstName = resultSet.getString(1);            String secondName = resultSet.getString(2);            String mail = resultSet.getString(3);            String password = resultSet.getString(4);            User tmp = new User(id,firstName,secondName,mail,password);            users.add(tmp);        }        return users;    }    public boolean registration(User user) throws SQLException {        if(isUser(user)){            return false;        }else{            String insert = "insert into "+Const.USER_TABLE+"("+Const.USER_FIRSTNAME+","+Const.USER_SECONDNAME+","+Const.USER_MAIL+","+Const.USER_PASSWORD+")"+"values(?,?,?,?)";            PreparedStatement preparedStatement = getConnection().prepareStatement(insert);            preparedStatement.setString(1,user.getFirstName());            preparedStatement.setString(2,user.getSecondName());            preparedStatement.setString(3,user.getMail());            preparedStatement.setString(4,user.getPassword());            preparedStatement.executeUpdate();            return true;        }    }    public boolean isUser(User user) throws SQLException {        if(getByMail(user.getMail()) == null)            return false;        else            return true;    }    public User getByMail(String mail) throws SQLException {        String select = " select  * from " + Const.USER_TABLE + " where mail = " + "'"+mail+"'";        Statement statement = getConnection().createStatement();        ResultSet resultSet = statement.executeQuery(select);        if(!resultSet.first())            return null;        else{            int id = resultSet.getInt(1);            String firstName = resultSet.getString(2);            String secondName = resultSet.getString(3);            String Mail = resultSet.getString(4);            String password = resultSet.getString(5);            User tmp = new User(id,firstName,secondName,Mail,password);            System.out.println(firstName);            System.out.println(Mail);            return tmp;        }    }}